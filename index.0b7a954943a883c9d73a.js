(()=>{"use strict";var e="#cards-list-template";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function n(e,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}var r=function(){function e(t,n,r,o){var i=o.handleCardClick,a=o.handleRemoveCard,u=o.handleLikeClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._likes=t.likes,this._id=t._id,this._owner=t.owner,this._idOwner=n,this._templateSelector=r,this._handleCardClick=i,this._handleLikeClick=u,this._handleRemoveCard=a,this._remove=this._remove.bind(this)}var t,r;return t=e,r=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}},{key:"_toggleLike",value:function(){this._likeButton.classList.toggle("card__like_active")}},{key:"_remove",value:function(){this._handleRemoveCard(this._id)}},{key:"delete",value:function(){this._element.remove(),this._element=null}},{key:"updateCounterLikes",value:function(e){this._element.querySelector(".card__like-counter").textContent=e>0?e:""}},{key:"_renderLikeIcon",value:function(){var e=this;this._likes.forEach((function(t){e._idOwner===t._id&&e._element.querySelector(".card__like").classList.add("card__like_active")}))}},{key:"_setEventListener",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){e._toggleLike();var t=e._likeButton.classList.contains("card__like_active");e._handleLikeClick(t)})),this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}},{key:"getCard",value:function(){return this}},{key:"_renderTrashIcon",value:function(){var e=this;this._idOwner===this._owner._id&&(this._deleteButton=this._element.querySelector(".card__delete"),this._deleteButton.classList.add("card__delete_active"),this._deleteButton.addEventListener("click",(function(){e._handleRemoveCard(e._id)})))}},{key:"generate",value:function(){return this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__like"),this._cardImage=this._element.querySelector(".card__image"),this._element.querySelector(".card__title").textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt="Фото пользователя "+this._name,this.updateCounterLikes(this._likes.length),this._renderTrashIcon(),this._renderLikeIcon(),this._setEventListener(),this._element}}],r&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==o(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===o(i)?i:String(i)),r)}var i}var a=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formValidate=n,this._inputList=Array.from(this._formValidate.querySelectorAll(this._inputSelector)),this._submitButtonElement=this._formValidate.querySelector(this._submitButtonSelector)}var t,n;return t=e,(n=[{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"_hideInputError",value:function(e){var t=this._formValidate.querySelector(".".concat(e.id,"-error"));t.classList.remove(this._errorClass),t.textContent="",e.classList.remove(this._inputErrorClass)}},{key:"_showInputError",value:function(e){var t=this._formValidate.querySelector(".".concat(e.id,"-error"));t.classList.add(this._errorClass),t.textContent=e.validationMessage,e.classList.add(this._inputErrorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?(this._submitButtonElement.classList.add(this._inactiveButtonClass),this._submitButtonElement.disabled=!0):(this._submitButtonElement.classList.remove(this._inactiveButtonClass),this._submitButtonElement.disabled=!1)}},{key:"_setEventListener",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t),t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListener()}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==u(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==u(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===u(o)?o:String(o)),r)}var o}var l=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._element=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._element.classList.add("popup_opened")}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._element.classList.remove("popup_opened")}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._element.querySelector(".popup__close-btn").addEventListener("click",(function(){return e.close()})),this._element.addEventListener("mousedown",(function(t){t.target.classList.contains("popup")&&e.close()}))}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==s(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==s(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===s(o)?o:String(o)),r)}var o}function p(){return p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},p.apply(this,arguments)}function y(e,t){return y=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},y(e,t)}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}var d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&y(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e){var t,n=e.containerSelector,r=e.handleSubmitForm;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._handleSubmitForm=r,t._form=t._element.querySelector(".popup__form"),t._inputList=t._element.querySelectorAll(".popup__input-field"),t}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"renderLoading",value:function(e){this._form.querySelector(".popup__submit-btn").textContent=e}},{key:"setEventListeners",value:function(){var e=this;p(h(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmitForm(e._getInputValues()),e.close()}))}},{key:"close",value:function(){this._form.reset(),p(h(a.prototype),"close",this).call(this)}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==m(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==m(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===m(o)?o:String(o)),r)}var o}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},b.apply(this,arguments)}function _(e,t){return _=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},_(e,t)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._image=t._element.querySelector(".popup__image"),t._figcaption=t._element.querySelector(".popup__figcaption"),t}return t=a,(n=[{key:"open",value:function(e,t){this._image.src=t,this._figcaption.textContent=e,this._image.alt="Пользовательское описание - ".concat(e,"."),b(g(a.prototype),"open",this).call(this)}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==k(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==k(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===k(o)?o:String(o)),r)}var o}var E=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._element=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._element.prepend(e)}},{key:"clear",value:function(){this._element.innerHTML=""}},{key:"renderItems",value:function(e){var t=this;this.clear(),e.forEach((function(e){t._renderer(e)}))}}])&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==L(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==L(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===L(o)?o:String(o)),r)}var o}var j=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(t),this._userAbout=document.querySelector(n),this._avatar=document.querySelector(r),this._avatar.alt="Аватар"}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,about:this._userAbout.textContent,id:this._id}}},{key:"setUserInfo",value:function(e,t){this._userName.textContent=e,this._userAbout.textContent=t}},{key:"setAvatar",value:function(e){this._avatar.src=e}},{key:"setId",value:function(e){this._id=e}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function C(e){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==C(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==C(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===C(o)?o:String(o)),r)}var o}var I=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.headers=t.headers}var t,n;return t=e,(n=[{key:"_handleResponse",value:function(e,t){return e.ok?e.json():Promise.reject(new Error("Ошибка: ".concat(res.status,". Сообщение об ошибке: ").concat(t)))}},{key:"sentCard",value:function(e){var t=this,n=e.name,r=e.link;return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers,method:"POST",body:JSON.stringify({name:n,link:r})}).then((function(e){return t._handleResponse(e,"Данные добавленной карты не были успешно получены сервером")}))}},{key:"updateUserInfo",value:function(e,t){var n=this;return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers,method:"PATCH",body:JSON.stringify({name:e,about:t})}).then((function(e){return n._handleResponse(e,"Данные о пользователе не были успешно обновлены на сервере")}))}},{key:"updateAvatar",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/users/me/avatar"),{headers:this.headers,method:"PATCH",body:JSON.stringify({avatar:e})}).then((function(e){return t._handleResponse(e,"Фото аватара не было успешно обновлено на сервере")}))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers,method:"GET"}).then((function(t){return e._handleResponse(t,"Данные о пользователе не были успешно получены")}))}},{key:"setLike",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/").concat(e,"/likes"),{headers:this.headers,method:"PUT"}).then((function(e){return t._handleResponse(e,"Данные о добавлении лайка карточке от попользователе не были успешно обновлены на сервере")}))}},{key:"deleteLike",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/").concat(e,"/likes"),{headers:this.headers,method:"DELETE"}).then((function(e){return t._handleResponse(e,"Данные об удалении лайка карточке от попользователе не были успешно обновлены на сервере")}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/").concat(e),{headers:this.headers,method:"DELETE"}).then((function(e){return t._handleResponse(e,"Данные о карточке попользователе не были успешно удалены на сервере")}))}},{key:"getCardList",value:function(){var e=this;return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers,method:"GET"}).then((function(t){return e._handleResponse(t,"Данные о списке карт не были успешно получены")}))}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==R(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==R(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===R(o)?o:String(o)),r)}var o}function q(){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=A(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},q.apply(this,arguments)}function B(e,t){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},B(e,t)}function A(e){return A=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},A(e)}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=A(r);if(o){var n=A(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===R(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._form=t._element.querySelector(".popup__form"),t._handleSubmit=void 0,t}return t=a,(n=[{key:"open",value:function(e){var t=e.handleSubmit;q(A(a.prototype),"open",this).call(this),this._handleSubmit=t}},{key:"close",value:function(){q(A(a.prototype),"close",this).call(this),this._handleSubmit=void 0}},{key:"setEventListeners",value:function(){var e=this;q(A(a.prototype),"setEventListeners",this).call(this),this.btn=document.querySelector(".popup__submit-btn"),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit()}))}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(l);function V(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var x=new I({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-60",headers:{Authorization:"615ec7c0-c05d-4e3c-8fba-c9ef3b1c5572","Content-Type":"application/json"}}),D=document.querySelector(".profile__edit-button"),N=document.querySelector(".profile__add-button"),F=document.querySelector(".profile__avatar-button"),H=new S("#popup-open-img");H.setEventListeners();var J,M={};J={formSelector:".popup__form",inputSelector:".popup__input-field",submitButtonSelector:".popup__submit-btn",inactiveButtonClass:"popup__submit-btn_disabled",inputErrorClass:"popup__input-field_type_error",errorClass:"popup__input-field-error_visible"},Array.from(document.querySelectorAll(J.formSelector)).forEach((function(e){var t=new a(J,e),n=e.getAttribute("name");M[n]=t,t.enableValidation()}));var G=new U("#popup-confirmation");function z(e,t,n){var o=new r(e,t,n,{handleCardClick:function(e,t){H.open(e,t)},handleAddLikeClick:function(){x.setLike(e._id).then((function(e){o.toggleLike(),o.updateCounterLikes(e.likes.length)})).catch((function(e){console.log(e.message)}))},handleDeleteLikeClick:function(){x.deleteLike(e._id).then((function(e){o.toggleLike(),o.updateCounterLikes(e.likes.length)})).catch((function(e){console.log(e.message)}))},handleRemoveCard:function(e){G.open({handleSubmit:function(){x.deleteCard(e).then((function(){o.delete()})).catch((function(e){console.log(e.message)})).finally((function(){G.close()}))}})}});return o.generate()}G.setEventListeners();var $=new E({renderer:function(t){var n=z(t,e);$.addItem(n)}},".gallery__list");Promise.all([x.getUserInfo(),x.getCardList()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i,a,u=[],c=!0,l=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=i.call(n)).done)&&(u.push(r.value),u.length!==t);c=!0);}catch(e){l=!0,o=e}finally{try{if(!c&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return u}}(t,n)||function(e,t){if(e){if("string"==typeof e)return V(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?V(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];K.setUserInfo(o.name,o.about),K.setAvatar(o.avatar),K.setId(o._id),$.renderItems(i.reverse())})).catch((function(e){console.log(e.message)}));var K=new j(".profile__name",".profile__about",".profile__avatar");G.setEventListeners();var Q=new d({containerSelector:"#popup-edit-form",handleSubmitForm:function(e){Q.renderLoading("Обновление..."),x.updateUserInfo(e["user-name"],e["user-about"]).then((function(e){K.setUserInfo(e.name,e.about),Q.close()})).catch((function(e){console.log(e.message)})).finally((function(){Q.renderLoading("Сохранить")}))}});Q.setEventListeners(),D.addEventListener("click",(function(){var e=K.getUserInfo(),t=e.name,n=e.about;Q.setInputValues({"user-name":t,"user-about":n}),Q.open(),M["edit-form"].resetValidation()}));var W=new d({containerSelector:"#popup-update-avatar",handleSubmitForm:function(e){W.renderLoading("Обновление аватара..."),x.updateAvatar(e["input-link-on-avatar"]).then((function(e){K.setAvatar(e.avatar),W.close()})).catch((function(e){console.log(e.message)})).finally((function(){W.renderLoading("Сохранить")}))}});W.setEventListeners(),F.addEventListener("click",(function(){W.open(),M["update-avatar-form"].resetValidation()}));var X=new d({containerSelector:"#popup-add-form",handleSubmitForm:function(t){X.renderLoading("Сохранение..."),x.sentCard(t).then((function(t){$.addItem(z(t,e))})).then((function(){document.querySelector(".gallery__list").firstElementChild.querySelector(".card__image").addEventListener("load",(function(){X.close()}))})).catch((function(e){console.log(e.message)})).finally((function(){X.renderLoading("Создать")}))}});X.setEventListeners(),N.addEventListener("click",(function(){X.open(),M["add-form"].resetValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,